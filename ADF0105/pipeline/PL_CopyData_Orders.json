{
	"name": "PL_CopyData_Orders",
	"properties": {
		"activities": [
			{
				"name": "LKP_Old_Watermark_Value",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": "select TableName, WatermarkValue as OldWatermarkValue from [dbo].[WatermarkTable] where TableName='orders'",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "DS_Demobits_db_WatermarkTable",
						"type": "DatasetReference"
					}
				}
			},
			{
				"name": "LK_New_Watermark_Value",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": "select max(Date_of_Purchase) as New_WaterMark_Value from [dbo].[Orders]\n",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "DS_Customer_db_Orders",
						"type": "DatasetReference"
					}
				}
			},
			{
				"name": "Copy_Orders_Data",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "LKP_Old_Watermark_Value",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "LK_New_Watermark_Value",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": {
							"value": "select * from [dbo].[Orders] where Date_of_Purchase > '@{activity('LKP_Old_Watermark_Value').output.firstRow.OldWatermarkValue}' and Date_of_Purchase <= '@{activity('LK_New_Watermark_Value').output.firstRow.New_WaterMark_Value}'\n",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"sink": {
						"type": "AzureSqlSink",
						"writeBehavior": "insert",
						"sqlWriterUseTableLock": false
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "DS_Customer_db_Orders",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "DS_Demobits_db_Orders",
						"type": "DatasetReference"
					}
				]
			},
			{
				"name": "UpdateWaterMark",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "Copy_Orders_Data",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[sqSetWaterMark]",
					"storedProcedureParameters": {
						"NewTime": {
							"value": {
								"value": "@activity('LK_New_Watermark_Value').output.firstRow.New_WaterMark_Value",
								"type": "Expression"
							},
							"type": "Datetime"
						},
						"TableName": {
							"value": {
								"value": "@activity('LKP_Old_Watermark_Value').output.firstRow.TableName",
								"type": "Expression"
							},
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "LS_demobits_db",
					"type": "LinkedServiceReference"
				}
			}
		],
		"annotations": [],
		"lastPublishTime": "2023-07-27T10:07:45Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}